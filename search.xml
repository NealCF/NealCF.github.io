<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/06/25/hello-world/"/>
      <url>/2020/06/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>deploy kubernetes by kuberspray</title>
      <link href="/2020/05/21/deploy-kubernetes-by-kuberspray/"/>
      <url>/2020/05/21/deploy-kubernetes-by-kuberspray/</url>
      
        <content type="html"><![CDATA[<h1 id="Deploy-kubernetes-by-kuberspray"><a href="#Deploy-kubernetes-by-kuberspray" class="headerlink" title="Deploy kubernetes by kuberspray"></a>Deploy kubernetes by kuberspray</h1><hr><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​        部署Kubernetes除了手动方式外，还有诸如Kubeadm、Kubespray、Breeze、Rancher、kargo等多种自动化方式。工具没有好坏之分，能干事、效率高就行。这里，笔者仍使用Kubespray部署当前K8s最新版本（用着真的很贴身），可自动化部署HA集群、可灵活定制开发、高稳定性等。</p><h1 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h1><table><thead><tr><th>IP</th><th>主机名</th><th>角色</th></tr></thead><tbody><tr><td>192.168.10.100</td><td>Ansible-client</td><td>ansible的部署节点</td></tr><tr><td>192.168.10.101</td><td>Kube-master1</td><td>Master,node</td></tr><tr><td>192.168.10.102</td><td>Kube-master2</td><td>Master,node</td></tr><tr><td>192.168.10.103</td><td>Kube-master3</td><td>Master,node</td></tr></tbody></table><h1 id="Kubernetes版本"><a href="#Kubernetes版本" class="headerlink" title="Kubernetes版本"></a>Kubernetes版本</h1><p> 1.15.0</p><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><ol><li><p>关闭selinux(all)<br> <code>sed -i &#39;/^SELINUX=/s/permissive/disabled/&#39; /etc/selinux/config</code></p></li><li><p>关闭fiewalld(all)<br> <code>systemctl stop firewalld &amp;&amp; systemctl disable firewalld</code></p></li><li><p>升级内核(k8s)</p><blockquote><ol><li><p>载入公钥<br> rpm –import <a href="https://www.elrepo.org/RPM-GPG-KEY-elrepo.org" target="_blank" rel="noopener">https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</a></p></li><li><p>升级安装ELRepo<br> rpm -Uvh <a href="http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm" target="_blank" rel="noopener">http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm</a></p></li><li><p>载入elrepo-kernel元数据<br> yum –disablerepo=* –enablerepo=elrepo-kernel repolist</p></li><li><p>查看可用的rpm包<br> yum –disablerepo=* –enablerepo=elrepo-kernel list kernel*</p><blockquote><p>说明：</p><pre><code>lt  ：long term support，长期支持版本；ml：mainline，主线版本；</code></pre></blockquote></li><li><p>安装最新版本的kernel<br>yum –disablerepo=* –enablerepo=elrepo-kernel install  kernel-ml.&gt;x86_64  -y</p></li><li><p>删除旧版本工具包<br>yum remove kernel-tools-libs.x86_64 kernel-tools.x86_64  -y</p></li><li><p>安装新版本工具包<br>yum –disablerepo=* –enablerepo=elrepo-kernel install kernel-ml-tools.x86_64  -y</p></li><li><p>查看内核插入顺序<br> [root@server-1 ~]# awk -F &#39; ‘$1==”menuentry “ {print i++ “ : “ $2}’ /etc/grub2.cfg<br> 0 : CentOS Linux (4.20.12-1.el7.elrepo.x86_64) 7 (Core)<br> 1 : CentOS Linux (3.10.0-957.5.1.el7.x86_64) 7 (Core)<br> 2 : CentOS Linux (3.10.0-957.el7.x86_64) 7 (Core)<br> 3 : CentOS Linux (0-rescue-ca0f6fb3c5f24478abc0a2e275281d7a) 7 (Core)</p></li><li><p>查看当前实际启动顺序<br> grub2-editenv list</p></li><li><p>设置默认启动<br>  grub2-set-default 0<br>  grub2-editenv list</p></li><li><p>reboot</p></li><li><p>卸载掉旧的kernel</p></li></ol></blockquote></li><li><p>安装ansible(ansible-client)</p></li></ol><pre><code>yum install -y epel-releaseyum install -y python-pip ansible python36 python36-pippip install --upgrade jinja2pip3 install --upgrade jinja2</code></pre><h1 id="配置kubespray-ansible-client"><a href="#配置kubespray-ansible-client" class="headerlink" title="配置kubespray(ansible-client)"></a>配置kubespray(ansible-client)</h1><p>线上不使用master分支，建议切换至最新tag<br>地址： <a href="https://kubespray.io" target="_blank" rel="noopener">https://kubespray.io</a></p><ol><li><p>安装git</p><pre><code>yum install git -ygit clone https://github.com/kubernetes-incubator/kubespray.gitcd kubespray/git branch -va 查看remote的分支git checkout -b v版本号 remote/../.. 选一个新的，bug可能少</code></pre></li><li><p>安装requirements.txt中的依赖</p><p><code>pip install -r requirements.txt</code></p></li><li><p>复制inventory模板作为自己的集群inventory文件</p><p><code>cp -r inventory/sample inventory/mycluster</code></p></li><li><p>使用inventory_builder，初始化inventory文件</p><pre><code>IPS=(192.168.10.101 192.168.10.102 192.168.10.103)CONFIG_FILE=inventory/mycluster/hosts.ymlpython3 contrib/inventory_builder/inventory.py ${IPS[@]}</code></pre><blockquote><p>设置两个环境变量IPS和CONFIG_FILE 代入inventory.py的脚本来生成hosts.yml文件</p></blockquote></li><li><p>确认inventory文件生成无误</p><pre><code>cat inventory/mycluster/hosts.yml [all]k8s-master1    ansible_host=192.168.10.101 ip=192.168.10.101k8s-master2    ansible_host=192.168.10.102 ip=192.168.10.102k8s-master3    ansible_host=192.168.10.103 ip=192.168.10.103[kube-master]k8s-master1k8s-master2k8s-master3[kube-node]k8s-master1k8s-master2k8s-master3[etcd]k8s-master1k8s-master2k8s-master3[k8s-cluster:children]kube-nodekube-master[calico-rr]</code></pre><blockquote><p><em>Note:</em></p><p>稍加修改主机名，如我的kube-master1-3，安装过程中会自动修改主机名和node master名称。<br>生产环境，master和etcd 请配置在不同节点。</p><p>这里是测试环境，因硬件资源紧张就将master和etcd部署在相同节点了。</p></blockquote></li><li><p>查看或修改默认参数</p><pre><code>at inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.ymlkube_version: v1.15.0   / 我修改为1.15.0，镜像缓存网站可能没有最新的镜像kube_network_plugin: calicokube_service_addresses: 10.233.0.0/18ube_pods_subnet: 10.233.64.0/18kube_proxy_mode: ipvs</code></pre></li></ol><h1 id="修改代理-kubespray"><a href="#修改代理-kubespray" class="headerlink" title="修改代理(kubespray)"></a>修改代理(kubespray)</h1><p>代理网站地址： <a href="https://github.com/Azure/container-service-for-azure-china/blob/master/aks/README.md#22-container-registry-proxy" target="_blank" rel="noopener">Azure中国Github</a> <a href="http://mirror.azure.cn/help/gcr-proxy-cache.html" target="_blank" rel="noopener">Azure中国Web</a></p><p>把脚本中的docker.io、grc.io和quay.io地址修改成azure中国的地址：</p><pre><code>sed -i &#39;s@gcr\.io@gcr\.azk8s\.cn@g&#39;  role/download/defaultssed -i &#39;s@docker\.io@dockerhub\.azk8s\.cn@g&#39; role/download/defaultssed -i &#39;s@quay\.io@quay\.azk8s\.cn@g&#39; role/download/defaultssed -i &#39;s@gcr\.io@gcr\.azk8s\.cn@g&#39; inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml</code></pre><h1 id="配置内核参数-k8s"><a href="#配置内核参数-k8s" class="headerlink" title="配置内核参数(k8s)"></a>配置内核参数(k8s)</h1><pre><code>添加内核参数开启路由转发等功能cat &lt;&lt; eofnet.ipv4.ip_forward=1net.ipv4.ip_local_reserved_ports=30000-32767net.bridge.bridge-nf-call-iptables=1net.bridge.bridge-nf-call-arptables=1net.bridge.bridge-nf-call-ip6tables=1eof &gt;&gt; /etc/sysctl.confsysctl -p</code></pre><h1 id="部署集群-kubespray"><a href="#部署集群-kubespray" class="headerlink" title="部署集群(kubespray)"></a>部署集群(kubespray)</h1><p><code>ansible-playbook -i inventory/mycluster/hosts.yml cluster.yml -b -v</code></p><h1 id="验证-k8s"><a href="#验证-k8s" class="headerlink" title="验证(k8s)"></a>验证(k8s)</h1><pre><code>[root@kube-master1 ~]# kubectl get nodeNAME           STATUS   ROLES    AGE   VERSIONkube-master1   Ready    master   72m   v1.15.0kube-master2   Ready    master   73m   v1.15.0kube-master3   Ready    master   72m   v1.15.0</code></pre><blockquote><p><em>Note:</em></p><p>可以看到节点都是ready状态了，说明部署成功。</p></blockquote><h1 id="部署测试"><a href="#部署测试" class="headerlink" title="部署测试"></a>部署测试</h1><pre><code># 创建一个nginxkubectl create nginx --image=nginx:1.7.9 --port=80 # 暴露nginx端口kubectl expose deployment nginx --type=NodePort# 查看nginx服务详情 kubectl get svc nginxNAME    TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGEnginx   NodePort   10.233.22.159   &lt;none&gt;        80:31758/TCP   5m58s# 访问测试curl 192.168.10.101:31758</code></pre><h1 id="高可用"><a href="#高可用" class="headerlink" title="高可用"></a>高可用</h1><p><strong>etcd高可用</strong></p><p>etcd本身就支持集群模式，所以啥都不用考虑，只要保证节点数量足够，升级备份之类的事情，kubespray已经帮你做了。</p><p>由于etcd采用<code>Raft</code>一致性算法，集群规模最好不要超过9个，推荐<code>3，5，7，9</code>个数量。具体看集群规模。如果性能不够，宁可多分配资源，也最好不要超过9个。</p><p>这里能选择偶数个节点吗？ 最好不要这样。原因有二：</p><ul><li>偶数个节点集群不可用风险更高，表现在选主过程中，有较大概率或等额选票，从而触发下一轮选举。</li><li>偶数个节点集群在某些网络分割的场景下无法正常工作。试想，当网络分割发生后，将集群节点对半分割开。此时集群将无法工作。按照RAFT协议，此时集群写操作无法使得大多数节点同意，从而导致写失败，集群无法正常工作。</li></ul><p><strong>kube-apiserver 高可用</strong><br><a href="https://kubespray.io/#/docs/ha-mode" target="_blank" rel="noopener">https://kubespray.io/#/docs/ha-mode</a><br>haproxy</p><pre><code>yum install -y haproxy keepalivedvim /etc/haproxy/haproxy.cfg listen kubernetes-apiserver-https  bind *:8443  option ssl-hello-chk  mode tcp  timeout client 3h  timeout server 3h  server master1 192.168.10.81:6443  server master2 192.168.10.82:6443  server master3 192.168.10.83:6443  balance roundrobin</code></pre><h1 id="维护命令"><a href="#维护命令" class="headerlink" title="维护命令"></a>维护命令</h1><pre><code>如果需要扩容Work节点，则修改hosts.yml文件，增加新增的机器信息 执行命令：ansible-playbook -i inventory/mycluster/hosts.yml scale.yml -b -v -k将hosts.yml文件中的master和etcd的机器增加到多台，执行部署命令ansible-playbook -i inventory/mycluster/hosts.yml cluster.yml -b -vvv刪除节点，如果不指定节点就是刪除整个集群：ansible-playbook -i inventory/mycluster/hosts.yml remove-node.yml -b -v卸载执行命令：ansible-playbook -i inventory/mycluster/hosts.yml reset.yml -b -vvv升级K8s集群，选择对应的k8s版本信息，执行升级命令。涉及文件为upgrade-cluster.yml。ansible-playbook upgrade-cluster.yml -b -i inventory/mycluster/hosts.yml -e kube_version=vX.XX.XX -vvv</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>15875256388038</title>
      <link href="/2020/04/22/15875256388038/"/>
      <url>/2020/04/22/15875256388038/</url>
      
        <content type="html"><![CDATA[<h1 id="安装必备的工具"><a href="#安装必备的工具" class="headerlink" title="安装必备的工具"></a>安装必备的工具</h1><p>[root@disk-test ~]# yum install -y gdisk</p><h1 id="清除分区信息"><a href="#清除分区信息" class="headerlink" title="清除分区信息"></a>清除分区信息</h1><p>[root@disk-test ~]# lsblk<br>NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sr0     11:0    1 1024M  0 rom<br>sr1     11:1    1  464K  0 rom<br>vda    253:0    0   40G  0 disk<br>└─vda1 253:1    0   40G  0 part /<br>vdb    253:16   0  120G  0 disk </p><p>[root@disk-test ~]# dd if=/dev/zero of=/dev/vdb bs=1M count=1000  </p><p>#磁盘分区<br>[root@disk-test ~]# parted /dev/vdb mklabel gpt<br>Warning: The existing disk label on /dev/vdb will be destroyed and all data on this disk will be lost. Do you want to continue?<br>Yes/No? yes<br>Information: You may need to update /etc/fstab.</p><p>[root@disk-test ~]# echo “Ignore” | parted /dev/vdb “mkpart primary xfs 0 -1”<br>Warning: The resulting partition is not properly aligned for best performance.<br>Information: You may need to update /etc/fstab.</p><p>[root@disk-test ~]# partprobe<br>Warning: Unable to open /dev/sr1 read-write (Read-only file system).  /dev/sr1 has been opened read-only.<br>[root@disk-test ~]# lsblk<br>NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sr0     11:0    1 1024M  0 rom<br>sr1     11:1    1  464K  0 rom<br>vda    253:0    0   40G  0 disk<br>└─vda1 253:1    0   40G  0 part /<br>vdb    253:16   0  120G  0 disk<br>└─vdb1 253:17   0  120G  0 part </p><p>#格式化并挂载<br>[root@disk-test ~]# mkfs.xfs /dev/vdb1<br>meta-data=/dev/vdb1              isize=512    agcount=4, agsize=7864258 blks<br>         =                       sectsz=512   attr=2, projid32bit=1<br>         =                       crc=1        finobt=0, sparse=0<br>data     =                       bsize=4096   blocks=31457031, imaxpct=25<br>         =                       sunit=0      swidth=0 blks<br>naming   =version 2              bsize=4096   ascii-ci=0 ftype=1<br>log      =internal log           bsize=4096   blocks=15359, version=2<br>         =                       sectsz=512   sunit=0 blks, lazy-count=1<br>realtime =none                   extsz=4096   blocks=0, rtextents=0<br>[root@disk-test ~]#<br>[root@disk-test ~]# mount /dev/vdb1 /mnt</p><p>#持续写入文件<br>[root@disk-test ~]# cat test.sh<br>for ((i=1;i&lt;1000;i++))<br>do<br>echo $i<br>echo $i&gt;&gt;/mnt/test.txt<br>sleep 1<br>done</p><p>[root@disk-test ~]# bash test.sh</p><p>#后台扩容磁盘<br>[root@disk-test ~]# lsblk<br>NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sr0     11:0    1 1024M  0 rom<br>sr1     11:1    1  464K  0 rom<br>vda    253:0    0   40G  0 disk<br>└─vda1 253:1    0   40G  0 part /<br>vdb    253:16   0  130G  0 disk<br>└─vdb1 253:17   0  120G  0 part /mnt</p><h1 id="自增长分区"><a href="#自增长分区" class="headerlink" title="自增长分区"></a>自增长分区</h1><p>[root@disk-test ~]# growpart /dev/vdb 1<br>CHANGED: partition=1 start=34 old: size=251656254 end=251656288 new: size=272629692 end=272629726<br>[root@disk-test ~]# lsblk<br>NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sr0     11:0    1 1024M  0 rom<br>sr1     11:1    1  464K  0 rom<br>vda    253:0    0   40G  0 disk<br>└─vda1 253:1    0   40G  0 part /<br>vdb    253:16   0  130G  0 disk<br>└─vdb1 253:17   0  130G  0 part /mnt</p><h1 id="确认文件系统无变化"><a href="#确认文件系统无变化" class="headerlink" title="确认文件系统无变化"></a>确认文件系统无变化</h1><p>[root@disk-test ~]# df -Th<br>Filesystem     Type      Size  Used Avail Use% Mounted on<br>/dev/vda1      ext4       40G  1.3G   36G   4% /<br>devtmpfs       devtmpfs  873M     0  873M   0% /dev<br>tmpfs          tmpfs     883M     0  883M   0% /dev/shm<br>tmpfs          tmpfs     883M   17M  866M   2% /run<br>tmpfs          tmpfs     883M     0  883M   0% /sys/fs/cgroup<br>/dev/vdb1      xfs       120G   33M  120G   1% /mnt<br>tmpfs          tmpfs     177M     0  177M   0% /run/user/0</p><h1 id="自增长文件系统"><a href="#自增长文件系统" class="headerlink" title="自增长文件系统"></a>自增长文件系统</h1><p>[root@disk-test ~]# xfs_growfs /dev/vdb1<br>meta-data=/dev/vdb1              isize=512    agcount=4, agsize=7864258 blks<br>         =                       sectsz=512   attr=2, projid32bit=1<br>         =                       crc=1        finobt=0 spinodes=0<br>data     =                       bsize=4096   blocks=31457031, imaxpct=25<br>         =                       sunit=0      swidth=0 blks<br>naming   =version 2              bsize=4096   ascii-ci=0 ftype=1<br>log      =internal               bsize=4096   blocks=15359, version=2<br>         =                       sectsz=512   sunit=0 blks, lazy-count=1<br>realtime =none                   extsz=4096   blocks=0, rtextents=0<br>data blocks changed from 31457031 to 34078711</p><h1 id="确认文件系统大小变化并确保数据可持续写入"><a href="#确认文件系统大小变化并确保数据可持续写入" class="headerlink" title="确认文件系统大小变化并确保数据可持续写入"></a>确认文件系统大小变化并确保数据可持续写入</h1><p>[root@disk-test ~]# df -Th<br>Filesystem     Type      Size  Used Avail Use% Mounted on<br>/dev/vda1      ext4       40G  1.3G   36G   4% /<br>devtmpfs       devtmpfs  873M     0  873M   0% /dev<br>tmpfs          tmpfs     883M     0  883M   0% /dev/shm<br>tmpfs          tmpfs     883M   17M  866M   2% /run<br>tmpfs          tmpfs     883M     0  883M   0% /sys/fs/cgroup<br>/dev/vdb1      xfs       130G   33M  130G   1% /mnt<br>tmpfs          tmpfs     177M     0  177M   0% /run/user/0</p><p>[root@disk-test ~]# tail -f /mnt/test.txt<br>351<br>352<br>353<br>354<br>355<br>356<br>357<br>358<br>359<br>360<br>361<br>362<br>363</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>15875238112259</title>
      <link href="/2020/04/22/15875238112259/"/>
      <url>/2020/04/22/15875238112259/</url>
      
        <content type="html"><![CDATA[<p>#清除分区信息<br>[root@disk-test ~]# umount /mnt<br>[root@disk-test ~]# dd if=/dev/zero of=/dev/vdb bs=1M count=1000<br>1000+0 records in<br>1000+0 records out<br>1048576000 bytes (1.0 GB) copied, 15.9085 s, 65.9 MB/s<br>[root@disk-test ~]#<br>[root@disk-test ~]#<br>[root@disk-test ~]#<br>[root@disk-test ~]# lsblk<br>NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sr0     11:0    1 1024M  0 rom<br>sr1     11:1    1  464K  0 rom<br>vda    253:0    0   40G  0 disk<br>└─vda1 253:1    0   40G  0 part /<br>vdb    253:16   0  110G  0 disk </p><p>#格式化磁盘并挂载<br>[root@disk-test ~]# mkfs.xfs /dev/vdb<br>meta-data=/dev/vdb               isize=512    agcount=4, agsize=7208960 blks<br>         =                       sectsz=512   attr=2, projid32bit=1<br>         =                       crc=1        finobt=0, sparse=0<br>data     =                       bsize=4096   blocks=28835840, imaxpct=25<br>         =                       sunit=0      swidth=0 blks<br>naming   =version 2              bsize=4096   ascii-ci=0 ftype=1<br>log      =internal log           bsize=4096   blocks=14080, version=2<br>         =                       sectsz=512   sunit=0 blks, lazy-count=1<br>realtime =none                   extsz=4096   blocks=0, rtextents=0<br>[root@disk-test ~]# </p><p>[root@disk-test ~]# mount /dev/vdb /mnt </p><p>#确认分区信息<br>[root@disk-test ~]# lsblk<br>NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sr0     11:0    1 1024M  0 rom<br>sr1     11:1    1  464K  0 rom<br>vda    253:0    0   40G  0 disk<br>└─vda1 253:1    0   40G  0 part /<br>vdb    253:16   0  110G  0 disk /mnt<br>[root@disk-test ~]# df -Th<br>Filesystem     Type      Size  Used Avail Use% Mounted on<br>/dev/vda1      ext4       40G  1.2G   37G   4% /<br>devtmpfs       devtmpfs  873M     0  873M   0% /dev<br>tmpfs          tmpfs     883M     0  883M   0% /dev/shm<br>tmpfs          tmpfs     883M   17M  866M   2% /run<br>tmpfs          tmpfs     883M     0  883M   0% /sys/fs/cgroup<br>tmpfs          tmpfs     177M     0  177M   0% /run/user/0<br>/dev/vdb       xfs       110G   33M  110G   1% /mnt</p><p>#后台扩容磁盘<br>[root@disk-test ~]# lsblk<br>NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sr0     11:0    1 1024M  0 rom<br>sr1     11:1    1  464K  0 rom<br>vda    253:0    0   40G  0 disk<br>└─vda1 253:1    0   40G  0 part /<br>vdb    253:16   0  120G  0 disk /mnt</p><p>#确认文件系统没有变化<br>[root@disk-test ~]# df -Th<br>Filesystem     Type      Size  Used Avail Use% Mounted on<br>/dev/vda1      ext4       40G  1.2G   37G   4% /<br>devtmpfs       devtmpfs  873M     0  873M   0% /dev<br>tmpfs          tmpfs     883M     0  883M   0% /dev/shm<br>tmpfs          tmpfs     883M   17M  866M   2% /run<br>tmpfs          tmpfs     883M     0  883M   0% /sys/fs/cgroup<br>tmpfs          tmpfs     177M     0  177M   0% /run/user/0<br>/dev/vdb       xfs       110G   33M  110G   1% /mnt</p><p>#自增涨文件系统<br>[root@disk-test ~]# xfs_growfs /dev/vdb<br>meta-data=/dev/vdb               isize=512    agcount=4, agsize=7208960 blks<br>         =                       sectsz=512   attr=2, projid32bit=1<br>         =                       crc=1        finobt=0 spinodes=0<br>data     =                       bsize=4096   blocks=28835840, imaxpct=25<br>         =                       sunit=0      swidth=0 blks<br>naming   =version 2              bsize=4096   ascii-ci=0 ftype=1<br>log      =internal               bsize=4096   blocks=14080, version=2<br>         =                       sectsz=512   sunit=0 blks, lazy-count=1<br>realtime =none                   extsz=4096   blocks=0, rtextents=0<br>data blocks changed from 28835840 to 31457280</p><p>#确认文件系统大小<br>[root@disk-test ~]# df -Th<br>Filesystem     Type      Size  Used Avail Use% Mounted on<br>/dev/vda1      ext4       40G  1.2G   37G   4% /<br>devtmpfs       devtmpfs  873M     0  873M   0% /dev<br>tmpfs          tmpfs     883M     0  883M   0% /dev/shm<br>tmpfs          tmpfs     883M   17M  866M   2% /run<br>tmpfs          tmpfs     883M     0  883M   0% /sys/fs/cgroup<br>tmpfs          tmpfs     177M     0  177M   0% /run/user/0<br>/dev/vdb       xfs       120G   33M  120G   1% /mnt</p><p>#写文件系统，确认没问题<br>[root@disk-test ~]# cd /mnt/<br>[root@disk-test mnt]# touch 1.txt</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>15875210657332</title>
      <link href="/2020/04/22/15875210657332/"/>
      <url>/2020/04/22/15875210657332/</url>
      
        <content type="html"><![CDATA[<h1 id="vdb-100G-标准分区"><a href="#vdb-100G-标准分区" class="headerlink" title="vdb 100G 标准分区"></a>vdb 100G 标准分区</h1><p>[root@disk-test ~]#<br>[root@disk-test ~]# parted /dev/vdc mklabel gpt<br>Error: Could not stat device /dev/vdc - No such file or directory.<br>Retry/Cancel? ^C<br>[root@disk-test ~]# parted /dev/vdb mklabel gpt<br>Information: You may need to update /etc/fstab.</p><p>[root@disk-test ~]# echo “Ignore” | parted /dev/vdb “mkpart primary xfs 0 -1”<br>Warning: The resulting partition is not properly aligned for best performance.<br>Information: You may need to update /etc/fstab.</p><p>[root@disk-test ~]# partprobe<br>Warning: Unable to open /dev/sr1 read-write (Read-only file system).  /dev/sr1 has been opened read-only.<br>[root@disk-test ~]# lsblk<br>NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sr0     11:0    1 1024M  0 rom<br>sr1     11:1    1  464K  0 rom<br>vda    253:0    0   40G  0 disk<br>└─vda1 253:1    0   40G  0 part /<br>vdb    253:16   0  100G  0 disk<br>└─vdb1 253:17   0  100G  0 part<br>[root@disk-test ~]# mkfs.xfs /dev/vdb1<br>meta-data=/dev/vdb1              isize=512    agcount=4, agsize=6553538 blks<br>         =                       sectsz=512   attr=2, projid32bit=1<br>         =                       crc=1        finobt=0, sparse=0<br>data     =                       bsize=4096   blocks=26214151, imaxpct=25<br>         =                       sunit=0      swidth=0 blks<br>naming   =version 2              bsize=4096   ascii-ci=0 ftype=1<br>log      =internal log           bsize=4096   blocks=12799, version=2<br>         =                       sectsz=512   sunit=0 blks, lazy-count=1<br>realtime =none                   extsz=4096   blocks=0, rtextents=0</p><p>[root@disk-test ~]#<br>[root@disk-test ~]# </p><h1 id="挂载分区，写入数据"><a href="#挂载分区，写入数据" class="headerlink" title="挂载分区，写入数据"></a>挂载分区，写入数据</h1><p>[root@disk-test ~]# mount /dev/vdb1 /mnt<br>[root@disk-test ~]# lsblk<br>NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sr0     11:0    1 1024M  0 rom<br>sr1     11:1    1  464K  0 rom<br>vda    253:0    0   40G  0 disk<br>└─vda1 253:1    0   40G  0 part /<br>vdb    253:16   0  100G  0 disk<br>└─vdb1 253:17   0  100G  0 part /mnt<br>[root@disk-test ~]# touch /mnt/test.txt<br>[root@disk-test ~]# cp /var/log/dmesg /mnt/</p><h1 id="卸载分区"><a href="#卸载分区" class="headerlink" title="卸载分区"></a>卸载分区</h1><p>[root@disk-test ~]# umount /mnt</p><h1 id="后台扩容磁盘"><a href="#后台扩容磁盘" class="headerlink" title="后台扩容磁盘"></a>后台扩容磁盘</h1><p>[root@disk-test ~]# lsblk<br>NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sr0     11:0    1 1024M  0 rom<br>sr1     11:1    1  464K  0 rom<br>vda    253:0    0   40G  0 disk<br>└─vda1 253:1    0   40G  0 part /<br>vdb    253:16   0  110G  0 disk<br>└─vdb1 253:17   0  100G  0 part </p><h1 id="扩容分区vdb1"><a href="#扩容分区vdb1" class="headerlink" title="扩容分区vdb1"></a>扩容分区vdb1</h1><blockquote><p>parte进入后需要fix分区表（存放位置及GPT标示的可用空间）<br>[root@disk-test ~]# parted /dev/vdb<br>GNU Parted 3.1<br>Using /dev/vdb<br>Welcome to GNU Parted! Type ‘help’ to view a list of commands.<br>(parted) print<br>Error: The backup GPT table is not at the end of the disk, as it should be.  This might mean that another operating system believes the disk is smaller.  Fix, by moving the backup to the end (and removing the old backup)?<br>Fix/Ignore/Cancel? Fix<br>Warning: Not all of the space available to /dev/vdb appears to be used, you can fix the GPT to use all of the space (an extra 20971520 blocks) or continue with the current setting?<br>Fix/Ignore? Fix<br>Model: Virtio Block Device (virtblk)<br>Disk /dev/vdb: 118GB<br>Sector size (logical/physical): 512B/512B<br>Partition Table: gpt<br>Disk Flags: </p></blockquote><p>Number  Start   End    Size   File system  Name     Flags<br> 1      17.4kB  107GB  107GB  xfs          primary</p><p>(parted) resizepart 1 100%<br>(parted) quit<br>Information: You may need to update /etc/fstab.</p><h1 id="刷新分区表"><a href="#刷新分区表" class="headerlink" title="刷新分区表"></a>刷新分区表</h1><p>[root@disk-test ~]# partprobe<br>Warning: Unable to open /dev/sr1 read-write (Read-only file system).  /dev/sr1 has been opened read-only.</p><p>[root@disk-test ~]# lsblk<br>NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sr0     11:0    1 1024M  0 rom<br>sr1     11:1    1  464K  0 rom<br>vda    253:0    0   40G  0 disk<br>└─vda1 253:1    0   40G  0 part /<br>vdb    253:16   0  110G  0 disk<br>└─vdb1 253:17   0  110G  0 part </p><h1 id="挂载分区，增长文件系统"><a href="#挂载分区，增长文件系统" class="headerlink" title="挂载分区，增长文件系统"></a>挂载分区，增长文件系统</h1><p>[root@disk-test ~]# mount /dev/vdb1 /mnt<br>[root@disk-test ~]# xfs_growfs /dev/vdb1<br>meta-data=/dev/vdb1              isize=512    agcount=4, agsize=6553538 blks<br>         =                       sectsz=512   attr=2, projid32bit=1<br>         =                       crc=1        finobt=0 spinodes=0<br>data     =                       bsize=4096   blocks=26214151, imaxpct=25<br>         =                       sunit=0      swidth=0 blks<br>naming   =version 2              bsize=4096   ascii-ci=0 ftype=1<br>log      =internal               bsize=4096   blocks=12799, version=2<br>         =                       sectsz=512   sunit=0 blks, lazy-count=1<br>realtime =none                   extsz=4096   blocks=0, rtextents=0<br>data blocks changed from 26214151 to 28835831</p><p>#确认文件系统大小<br>[root@disk-test ~]# df -Th<br>Filesystem     Type      Size  Used Avail Use% Mounted on<br>/dev/vda1      ext4       40G  1.2G   37G   4% /<br>devtmpfs       devtmpfs  873M     0  873M   0% /dev<br>tmpfs          tmpfs     883M     0  883M   0% /dev/shm<br>tmpfs          tmpfs     883M   17M  866M   2% /run<br>tmpfs          tmpfs     883M     0  883M   0% /sys/fs/cgroup<br>tmpfs          tmpfs     177M     0  177M   0% /run/user/0<br>/dev/vdb1      xfs       110G   33M  110G   1% /mnt</p><h1 id="确认目录内容信息"><a href="#确认目录内容信息" class="headerlink" title="确认目录内容信息"></a>确认目录内容信息</h1><p>[root@disk-test ~]# cd /mnt/<br>[root@disk-test mnt]# du -sm *<br>1       dmesg<br>0       test.txt</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
